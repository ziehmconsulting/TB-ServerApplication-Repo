{
  "entityType" : "DASHBOARD",
  "entity" : {
    "assignedCustomers" : null,
    "configuration" : {
      "description" : "",
      "widgets" : {
        "d2c98459-2d61-5e8d-91a8-93ec2a32e2c3" : {
          "typeFullFqn" : "system.control_widgets.switch_control",
          "type" : "rpc",
          "sizeX" : 4,
          "sizeY" : 2.5,
          "config" : {
            "targetDeviceAliases" : [ ],
            "showTitle" : false,
            "backgroundColor" : "#e6e7e8",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "initialValue" : false,
              "retrieveValueMethod" : "rpc",
              "valueKey" : "value",
              "getValueMethod" : "getValue",
              "parseValueFunction" : "return data ? true : false;",
              "setValueMethod" : "setLedStatus",
              "convertValueFunction" : "return value;",
              "requestTimeout" : 500,
              "requestPersistent" : false,
              "persistentPollingInterval" : 5000,
              "title" : "Switch control",
              "showOnOffLabels" : true
            },
            "title" : "Switch Control",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "decimals" : 2,
            "datasources" : [ ],
            "targetDevice" : {
              "type" : "device",
              "deviceId" : "9d31e630-45f2-11ef-900e-035729db3231"
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "d2c98459-2d61-5e8d-91a8-93ec2a32e2c3"
        },
        "2ada2796-e822-e720-aa8b-cdfb6b5978bd" : {
          "typeFullFqn" : "system.command_button",
          "type" : "rpc",
          "sizeX" : 3,
          "sizeY" : 1,
          "config" : {
            "showTitle" : false,
            "backgroundColor" : "rgba(255, 255, 255, 0)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "onClickState" : {
                "action" : "EXECUTE_RPC",
                "executeRpc" : {
                  "method" : "setState",
                  "requestTimeout" : 5000,
                  "requestPersistent" : false,
                  "persistentPollingInterval" : 1000
                },
                "setAttribute" : {
                  "key" : "state",
                  "scope" : "SERVER_SCOPE"
                },
                "putTimeSeries" : {
                  "key" : "state"
                },
                "valueToData" : {
                  "type" : "NONE",
                  "constantValue" : true,
                  "valueToDataFunction" : "/* Return RPC parameters or attribute/time-series value */\nreturn true;"
                }
              },
              "disabledState" : {
                "action" : "DO_NOTHING",
                "defaultValue" : false,
                "getAttribute" : {
                  "key" : "state",
                  "scope" : null
                },
                "getTimeSeries" : {
                  "key" : "state"
                },
                "dataToValue" : {
                  "type" : "NONE",
                  "compareToValue" : true,
                  "dataToValueFunction" : "/* Should return boolean value */\nreturn data;"
                }
              },
              "appearance" : {
                "type" : "outlined",
                "autoScale" : true,
                "showLabel" : true,
                "label" : "Send",
                "showIcon" : true,
                "icon" : "arrow_outward",
                "iconSize" : 24,
                "iconSizeUnit" : "px",
                "mainColor" : "#3F52DD",
                "backgroundColor" : "#FFFFFF",
                "customStyle" : {
                  "enabled" : null,
                  "hovered" : null,
                  "pressed" : null,
                  "activated" : null,
                  "disabled" : null
                }
              }
            },
            "title" : "Command button",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "actions" : { },
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "titleFont" : {
              "size" : 12,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : null,
              "style" : null,
              "lineHeight" : "1.6"
            },
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "14px",
            "configMode" : "basic",
            "borderRadius" : "4px",
            "datasources" : [ ],
            "targetDevice" : {
              "type" : "device",
              "deviceId" : "58f31bd0-4429-11ef-900e-035729db3231"
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "2ada2796-e822-e720-aa8b-cdfb6b5978bd"
        },
        "5eda733a-ad8b-00fb-bf82-f3d063ab00fa" : {
          "typeFullFqn" : "system.control_widgets.round_switch",
          "type" : "rpc",
          "sizeX" : 2.5,
          "sizeY" : 2,
          "config" : {
            "targetDeviceAliases" : [ ],
            "showTitle" : false,
            "backgroundColor" : "#e6e7e8",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "initialValue" : false,
              "retrieveValueMethod" : "rpc",
              "valueKey" : "value",
              "getValueMethod" : "getLEDState",
              "parseValueFunction" : "return data ? true : false;",
              "setValueMethod" : "setLedStatus",
              "convertValueFunction" : "return value;",
              "requestTimeout" : 500,
              "requestPersistent" : false,
              "persistentPollingInterval" : 5000,
              "title" : "Round switch"
            },
            "title" : "Round switch",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "decimals" : 2,
            "datasources" : [ ],
            "targetDevice" : {
              "type" : "device",
              "deviceId" : "9d31e630-45f2-11ef-900e-035729db3231"
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "5eda733a-ad8b-00fb-bf82-f3d063ab00fa"
        },
        "985a035e-5193-71fa-40d6-67af83918962" : {
          "typeFullFqn" : "system.date.date_range_navigator",
          "type" : "static",
          "sizeX" : 5,
          "sizeY" : 5.5,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "hidePicker" : false,
              "onePanel" : false,
              "autoConfirm" : false,
              "showTemplate" : false,
              "firstDayOfWeek" : 1,
              "hideInterval" : false,
              "initialInterval" : "hour",
              "hideStepSize" : false,
              "stepSize" : "day",
              "hideLabels" : false,
              "useSessionStorage" : true
            },
            "title" : "Date-range-navigator",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "row" : 0,
          "col" : 0,
          "id" : "985a035e-5193-71fa-40d6-67af83918962"
        },
        "89c1d49c-8851-62fd-be89-6f52998d6032" : {
          "typeFullFqn" : "system.slider",
          "type" : "rpc",
          "sizeX" : 5,
          "sizeY" : 3,
          "config" : {
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "initialState" : {
                "action" : "EXECUTE_RPC",
                "defaultValue" : 0,
                "executeRpc" : {
                  "method" : "getState",
                  "requestTimeout" : 5000,
                  "requestPersistent" : false,
                  "persistentPollingInterval" : 1000
                },
                "getAttribute" : {
                  "key" : "state",
                  "scope" : null
                },
                "getTimeSeries" : {
                  "key" : "state"
                },
                "dataToValue" : {
                  "type" : "NONE",
                  "compareToValue" : true,
                  "dataToValueFunction" : "/* Should return integer value */\nreturn data;"
                }
              },
              "valueChange" : {
                "action" : "EXECUTE_RPC",
                "executeRpc" : {
                  "method" : "setState",
                  "requestTimeout" : 5000,
                  "requestPersistent" : false,
                  "persistentPollingInterval" : 1000
                },
                "setAttribute" : {
                  "key" : "state",
                  "scope" : "SERVER_SCOPE"
                },
                "putTimeSeries" : {
                  "key" : "state"
                },
                "valueToData" : {
                  "type" : "VALUE",
                  "constantValue" : 0,
                  "valueToDataFunction" : "/* Convert input integer value to RPC parameters or attribute/time-series value */\nreturn value;"
                }
              },
              "disabledState" : {
                "action" : "DO_NOTHING",
                "defaultValue" : false,
                "getAttribute" : {
                  "key" : "state",
                  "scope" : null
                },
                "getTimeSeries" : {
                  "key" : "state"
                },
                "dataToValue" : {
                  "type" : "NONE",
                  "compareToValue" : true,
                  "dataToValueFunction" : "/* Should return boolean value */\nreturn data;"
                }
              },
              "layout" : "default",
              "autoScale" : true,
              "showValue" : true,
              "valueUnits" : "Uhrzeit",
              "valueDecimals" : 1,
              "valueFont" : {
                "family" : "Roboto",
                "size" : 36,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "500",
                "lineHeight" : "36px"
              },
              "valueColor" : "rgba(0, 0, 0, 0.87)",
              "tickMin" : 0,
              "tickMax" : 24,
              "showTicks" : true,
              "ticksFont" : {
                "family" : "Roboto",
                "size" : 11,
                "sizeUnit" : "px",
                "style" : "normal",
                "weight" : "400",
                "lineHeight" : "16px"
              },
              "ticksColor" : "rgba(0,0,0,0.54)",
              "showTickMarks" : true,
              "tickMarksCount" : 11,
              "tickMarksColor" : "#5469FF",
              "mainColor" : "#5469FF",
              "backgroundColor" : "#CCD2FF",
              "mainColorDisabled" : "#9BA2B0",
              "backgroundColorDisabled" : "#D5D7E5",
              "leftIconSize" : 24,
              "leftIconSizeUnit" : "px",
              "leftIcon" : "lightbulb",
              "leftIconColor" : "#5469FF",
              "rightIconSize" : 24,
              "rightIconSizeUnit" : "px",
              "rightIcon" : "mdi:lightbulb-on",
              "rightIconColor" : "#5469FF",
              "background" : {
                "type" : "color",
                "color" : "#fff",
                "overlay" : {
                  "enabled" : false,
                  "color" : "rgba(255,255,255,0.72)",
                  "blur" : 3
                }
              },
              "padding" : "24px"
            },
            "title" : "Zeit",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "actions" : { },
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "titleFont" : {
              "size" : 16,
              "sizeUnit" : "px",
              "family" : null,
              "weight" : "500",
              "style" : null,
              "lineHeight" : "24px"
            },
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "pageSize" : 1024,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "14px",
            "configMode" : "basic",
            "titleColor" : "rgba(0, 0, 0, 0.87)",
            "datasources" : [ ],
            "targetDevice" : {
              "type" : "device",
              "deviceId" : "9d31e630-45f2-11ef-900e-035729db3231"
            },
            "borderRadius" : null
          },
          "row" : 0,
          "col" : 0,
          "id" : "89c1d49c-8851-62fd-be89-6f52998d6032"
        },
        "c8da99f7-37f6-01ac-5b98-12ac9a8b8a4b" : {
          "typeFullFqn" : "system.cards.entities_hierarchy",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1721399714160,
                  "endTimeMs" : 1721486114160
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "nodeRelationQueryFunction" : "var entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: \"FROM\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: []\n    }]\n};\nreturn query;\n\n/**\n\n// Function should return relations query object for current node used to fetch entity children.\n// Function can return 'default' string value. In this case default relations query will be used.\n\n// The following example code will construct simple relations query that will fetch relations of type 'Contains'\n// from the current entity.\n\nvar entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: \"FROM\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: []\n    }]\n};\nreturn query;\n\n**/\n",
              "nodeHasChildrenFunction" : "/**\n\n// Function should return boolean value indicating whether current node has children (whether it can be expanded).\n\n// The following example code will restrict entities hierarchy expansion up to third level.\n\nreturn nodeCtx.level <= 2;\n\n// The next example code will restrict entities expansion according to the value of example 'nodeHasChildren' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeHasChildren') && data['nodeHasChildren'] !== null) {\n    return data['nodeHasChildren'] === 'true';\n} else {\n    return true;\n}\n  \n**/\n ",
              "nodeOpenedFunction" : "/**\n\n// Function should return boolean value indicating whether current node should be opened (expanded) when it first loaded.\n\n// The following example code will open by default nodes up to third level.\n\nreturn nodeCtx.level <= 2;\n\n**/\n ",
              "nodeDisabledFunction" : "/**\n\n// Function should return boolean value indicating whether current node should be disabled (not selectable).\n\n// The following example code will disable current node according to the value of example 'nodeDisabled' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeDisabled') && data['nodeDisabled'] !== null) {\n    return data['nodeDisabled'] === 'true';\n} else {\n    return false;\n}\n  \n**/\n",
              "nodeIconFunction" : "/** \n\n// Function should return node icon info object.\n// Resulting object should contain either 'materialIcon' or 'iconUrl' property. \n// Where:\n    - 'materialIcon' - name of the material icon to be used from the Material Icons Library (https://material.io/tools/icons);\n    - 'iconUrl' - url of the external image to be used as node icon.\n// Function can return 'default' string value. In this case default icons according to entity type will be used.\n\n// The following example code shows how to use external image for devices which name starts with 'Test' and use \n// default icons for the rest of entities.\n\nvar entity = nodeCtx.entity;\nif (entity.id.entityType === 'DEVICE' && entity.name.startsWith('Test')) {\n    return {iconUrl: 'https://avatars1.githubusercontent.com/u/14793288?v=4&s=117'};\n} else {\n    return 'default';\n}\n \n**/",
              "nodeTextFunction" : "/**\n\n// Function should return text (can be HTML code) for the current node.\n\n// The following example code will generate node text consisting of entity name and temperature if temperature value is present in entity attributes/timeseries.\n\nvar data =  nodeCtx.data;\nvar entity = nodeCtx.entity;\nvar text = entity.name;\nif (data.hasOwnProperty('temperature') && data['temperature'] !== null) {\n    text += \" <b>\"+ data['temperature'] +\" °C</b>\";\n}\nreturn text;\n\n**/",
              "nodesSortFunction" : "/**\n\n// This function is used to sort nodes of the same level. Function should compare two nodes and return \n// integer value: \n//     - less than 0 - sort nodeCtx1 to an index lower than nodeCtx2\n//     - 0 - leave nodeCtx1 and nodeCtx2 unchanged with respect to each other\n//     - greater than 0 - sort nodeCtx2 to an index lower than nodeCtx1\n\n// The following example code will sort entities first by entity type in alphabetical order then\n// by entity name in alphabetical order.\n\nvar result = nodeCtx1.entity.id.entityType.localeCompare(nodeCtx2.entity.id.entityType);\nif (result === 0) {\n    result = nodeCtx1.entity.name.localeCompare(nodeCtx2.entity.name);\n}\nreturn result;\n  \n**/"
            },
            "title" : "Entities hierarchy",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "620d7e50-923c-5cc6-e75b-9db4c194aa9e",
              "dataKeys" : [ {
                "name" : "country",
                "type" : "entityField",
                "label" : "Country",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9879932573914105
              }, {
                "name" : "state",
                "type" : "entityField",
                "label" : "State",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.02301506150245025
              }, {
                "name" : "city",
                "type" : "entityField",
                "label" : "City",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.42134446782477575
              }, {
                "name" : "address",
                "type" : "entityField",
                "label" : "Address",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.4116034542230729
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "widgetStyle" : { },
            "actions" : { },
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "c8da99f7-37f6-01ac-5b98-12ac9a8b8a4b"
        }
      },
      "states" : {
        "default" : {
          "name" : "MyDash",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "d2c98459-2d61-5e8d-91a8-93ec2a32e2c3" : {
                  "sizeX" : 4,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "2ada2796-e822-e720-aa8b-cdfb6b5978bd" : {
                  "sizeX" : 3,
                  "sizeY" : 2,
                  "row" : 3,
                  "col" : 10
                },
                "5eda733a-ad8b-00fb-bf82-f3d063ab00fa" : {
                  "sizeX" : 3,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 10
                },
                "985a035e-5193-71fa-40d6-67af83918962" : {
                  "sizeX" : 5,
                  "sizeY" : 5,
                  "row" : 0,
                  "col" : 13
                },
                "89c1d49c-8851-62fd-be89-6f52998d6032" : {
                  "sizeX" : 5,
                  "sizeY" : 3,
                  "row" : 5,
                  "col" : 13
                },
                "c8da99f7-37f6-01ac-5b98-12ac9a8b8a4b" : {
                  "sizeX" : 7,
                  "sizeY" : 3,
                  "row" : 2,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%"
              }
            }
          }
        }
      },
      "entityAliases" : {
        "620d7e50-923c-5cc6-e75b-9db4c194aa9e" : {
          "id" : "620d7e50-923c-5cc6-e75b-9db4c194aa9e",
          "alias" : "Kunde_A",
          "filter" : {
            "type" : "entityList",
            "resolveMultiple" : true,
            "entityType" : "CUSTOMER",
            "entityList" : [ "7b51d690-45db-11ef-900e-035729db3231" ]
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "hideInterval" : false,
        "hideLastInterval" : false,
        "hideQuickInterval" : false,
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 1,
        "history" : {
          "historyType" : 1,
          "fixedTimewindow" : {
            "startTimeMs" : 1721770199999,
            "endTimeMs" : 1721773799999
          },
          "interval" : 8000
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true
      }
    },
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "969c7db0-442d-11ef-900e-035729db3231"
    },
    "image" : null,
    "mobileHide" : false,
    "mobileOrder" : null,
    "name" : "MyDash",
    "title" : "MyDash"
  },
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}